---
import ExternalLinkIcon from "../icons/ExternalLink.astro";
import { translations } from "../lang";

interface Props {
  title: string;
  description: string;
  company: string;
  companyUrl?: string;
  startDate: string;
  endDate: string;
  techStack?: string;
}

const {
  title,
  description,
  company,
  companyUrl,
  startDate,
  endDate,
  techStack,
} = Astro.props;
---

<div
  class="absolute w-3 h-3 bg-gray-200 rounded-full mt-1.5 -start-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"
>
</div>
<time
  class="mb-1 text-sm font-normal leading-none text-gray-400 dark:text-gray-500"
  ><span id="start-date">{startDate}</span> - <span id="end-date"
    >{endDate}</span
  ></time
>
<div class="mt-2 flex flex-col space-y-0.5">
  <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
    {title}
  </h3>
  <a
    href={companyUrl}
    target="_blank"
    rel="noopener"
    class="group flex w-max items-center text-pretty text-base font-normal text-gray-500 transition-colors duration-150 hover:text-black dark:border-gray-800 dark:text-gray-400 dark:hover:text-white"
  >
    <span id="company-name">{company}</span>
    <ExternalLinkIcon
      class="ml-1 duration-150 group-hover:translate-x-[1.5px] size-4"
      size={12}
      strokeWidth={1.5}
    />
  </a>
</div>
<p
  id="experience-description"
  class="mt-3 mb-4 text-base font-normal text-gray-500 dark:text-gray-400 text-pretty"
  set:html={`${description}`}
/>
<p class="text-gray-600 dark:text-gray-300 text-pretty">
  <span id="tech-stack" class="font-semibold">
    {translations.en.techStack}
  </span>: {techStack}
</p>

<script define:vars={{ translations }}>
  const updateExperience = (lang) => {
    document.querySelectorAll(".experiences").forEach((experienceItem) => {
      const companyElement = experienceItem.querySelector("#company-name");
      const descriptionElement = experienceItem.querySelector(
        "#experience-description"
      );
      const techStackElement = experienceItem.querySelector("#tech-stack");
      const startDateElement = experienceItem.querySelector("#start-date");
      const endDateElement = experienceItem.querySelector("#end-date");

      const job = companyElement.textContent.trim().toLowerCase();

      descriptionElement.innerHTML = translations[lang].jobs[job].description;
      techStackElement.textContent = translations[lang].techStack;
      startDateElement.textContent = translations[lang].jobs[job].startDate;
      endDateElement.textContent = translations[lang].jobs[job].endDate;
    });
  };

  const initialLang = document.documentElement.lang;
  updateExperience(initialLang);

  document.addEventListener("DOMContentLoaded", () => {
    updateExperience(document.documentElement.lang);

    document.addEventListener("languageChanged", (e) => {
      updateExperience(e.detail.lang);
    });
  });
</script>
